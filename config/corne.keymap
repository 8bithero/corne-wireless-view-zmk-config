/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        vol_up {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <10 11>;
        };

        vol_down {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <22 23>;
        };

        vol_mute {
            bindings = <&kp K_MUTE>;
            key-positions = <34 35>;
        };

        media_next {
            bindings = <&kp C_NEXT>;
            key-positions = <8 9>;
        };

        media_prev {
            bindings = <&kp C_PREV>;
            key-positions = <6 7>;
        };

        media_play_pause {
            bindings = <&kp C_PLAY_PAUSE>;
            key-positions = <7 8>;
        };

        brightness_up {
            bindings = <&kp C_BRIGHTNESS_INC>;
            key-positions = <3 2>;
        };

        brightness_down {
            bindings = <&kp C_BRIGHTNESS_DEC>;
            key-positions = <1 2>;
        };
    };

    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            bindings = <&shift>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
        };

        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <6 18 30 39 40 7 8 9 19 20 21 31 32 33 41 10 11 22 23 34 35>;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };
    };

    macros {
        pscrn_drag: pscrn_drag {
            compatible = "zmk,behavior-macro";
            label = "PSCRN_DRAG";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(N4))>;
        };

        pscrn_window: pscrn_window {
            compatible = "zmk,behavior-macro";
            label = "PSCRN_WINDOW";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(N4)) &kp SPACE>;
        };

        pscrn_full: pscrn_full {
            compatible = "zmk,behavior-macro";
            label = "PSCRN_FULL";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(N3))>;
        };

        pscrn_crop: pscrn_crop {
            compatible = "zmk,behavior-macro";
            label = "PSCRN_CROP";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(N5))>;
        };

        shift: with_lshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "KEY_PRESS_WITH_LEFT_SHIFT_MODIFIER";
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AUTOSHIFT_KEYPRESS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            //  ┌─────┬─────┬─────┬─────┬─────┬─────┐      ┌─────┬─────┬─────┬─────┬─────┬─────┐
            //  │ TAB │  Q  │  D  │  R  │  W  │  B  │      │  J  │  F  │  U  │  P  │  ;  │ BS  │
            //  │ CTRL│  A  │  S  │  D  │  F  │  G  │      │  Y  │  N  │  E  │  O  │  I  │  '  │
            //  │ SHFT│  Z  │  X  │  C  │  V  │  B  │      │  K  │  L  │  ,  │  .  │  /  │ ESC │
            //  └─────┴─────┴─────┤ GUI │ LWR │ SPC │      │ ENT │ RSE │ ALT ├─────┴─────┴─────┘
            //                    └─────┴─────┴─────┘      └─────┴─────┴─────┘

            label = "Base";
            bindings = <
&kp TAB    &kp Q         &kp W         &kp F        &kp P        &kp B        &kp J    &kp L        &kp U        &kp Y         &mt LC(LG(SPACE)) SEMICOLON  &kp BSPC
&kp LCTRL  &hml LSHFT A  &hml LCTRL R  &hml LALT S  &hml LCMD T  &kp G        &kp M    &hmr RGUI N  &hmr RALT E  &hmr RCTRL I  &hml RSHFT O                 &kp SQT
&kp LSHFT  &kp Z         &kp X         &kp C        &kp D        &kp V        &kp K    &kp H        &kp COMMA    &kp DOT       &kp FSLH                     &kp ESC
                                       &kp LGUI     &mo 1        &kp SPACE    &kp RET  &mo 2        &kp RALT
            >;
        };

        lower_layer {
            //  ┌─────┬─────┬─────┬─────┬─────┬─────┐      ┌─────┬─────┬─────┬─────┬─────┬─────┐
            //  │     │  !  │  @  │  £  │  $  │  %  │      │  ^  │  &  │  *  │  (  │  )  │ DEL │
            //  │     │     │     │     │     │     │      │  -  │  =  │  [  │  ]  │  \  │  `  │
            //  │     │     │     │     │     │     │      │  _  │  +  │  {  │  }  │  |  │  ~  │
            //  └─────┴─────┴─────┤     │     │     │      │     │ mo3 │     ├─────┴─────┴─────┘
            //                    └─────┴─────┴─────┘      └─────┴─────┴─────┘

            label = "Sym";
            bindings = <
&kp LS(LA(LC(UP_ARROW)))  &kp EXCL              &kp AT                &kp HASH              &kp DLLR              &kp PRCNT               &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp DEL
&kp LA(LC(NUMBER_7))      &kp LA(LC(NUMBER_8))  &kp LA(LC(NUMBER_9))  &kp LA(LC(NUMBER_1))  &kp LA(LC(NUMBER_2))  &kp LA(LC(NUMBER_3))    &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans                    &trans                &kp LA(LC(NUMBER_0))  &kp LA(LC(NUMBER_4))  &kp LA(LC(NUMBER_5))  &kp LA(LC(NUMBER_6))    &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                                                                      &trans                &trans                &trans                  &trans     &mo 3      &trans
            >;
        };

        raise_layer {
            //  ┌─────┬─────┬─────┬─────┬─────┬─────┐      ┌─────┬─────┬─────┬─────┬─────┬─────┐
            //  │     │  1  │  2  │  3  │  4  │  5  │      │  6  │  7  │  8  │  9  │  0  │ DEL │
            //  │     │     │     │     │     │     │      │ LFT │ DWN │  UP │ RGT │     │     │
            //  │     │     │     │     │     │     │      │ HOME│PG_DN│PG_UP│ END │     │     │
            //  └─────┴─────┴─────┤ mo4 │ mo3 │     │      │     │     │     ├─────┴─────┴─────┘
            //                    └─────┴─────┴─────┘      └─────┴─────┴─────┘

            label = "Nav";
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6             &kp N7         &kp N8     &kp N9               &kp N0  &kp DEL
&trans  &trans  &trans  &trans  &trans  &trans    &mt RA(LEFT) LEFT  &kp DOWN       &kp UP     &mt RA(RIGHT) RIGHT  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp HOME           &kp PAGE_DOWN  &kp PG_UP  &kp END              &trans  &trans
                        &mo 5   &mo 3   &trans    &trans             &trans         &trans
            >;
        };

        utility_layer {
            //  ┌─────┬─────┬─────┬─────┬─────┬─────┐      ┌─────┬─────┬─────┬─────┬─────┬─────┐
            //  │     │     │     │     │     │     │      │     │     │     │     │     │     │
            //  │BTCLR│ BT0 │ BT1 │ BT2 │ BT3 │ BT4 │      │     │     │     │     │     │     │
            //  │EGTOG│     │     │     │     │     │      │     │     │     │     │     │     │
            //  └─────┴─────┴─────┤     │     │     │      │     │     │     ├─────┴─────┴─────┘
            //                    └─────┴─────┴─────┘      └─────┴─────┴─────┘
            // -----------------------------------------------------------------------------------------
            // |       |     |     |     |     |     |   |     |     |     |     |     |      |
            // | BTCLR | BT0 | BT1 | BT2 | BT3 | BT4 |   |     |     |     |     |     |      |
            // |       |     |     |     |     |     |   |     |     |     |     |     |      |
            //                     |     |     |     |   |     |     |     |

            label = "Util";
            bindings = <
&trans             &pscrn_full   &pscrn_crop   &pscrn_window  &pscrn_drag   &trans          &trans       &trans  &trans  &trans  &trans  &trans
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4    &trans       &trans  &trans  &trans  &trans  &trans
&ext_power EP_TOG  &trans        &trans        &trans         &trans        &bootloader     &bootloader  &trans  &trans  &trans  &trans  &kp K_POWER
                                               &trans         &trans        &trans          &trans       &trans  &trans
            >;
        };

        autoshift {
            bindings = <
&trans  &as Q  &as D  &as R   &as W   &as B     &as J   &as F   &as U   &as P   &trans  &trans
&trans  &as A  &as S  &as H   &as T   &as G     &as Y   &as N   &as E   &as O   &as I   &trans
&trans  &as Z  &as X  &as M   &as C   &as V     &as K   &as L   &trans  &trans  &trans  &trans
                      &trans  &trans  &trans    &trans  &trans  &trans
            >;

            label = "Autoshift";
        };

        numpad_layer {
            //  ┌─────┬─────┬─────┬─────┬─────┬─────┐      ┌─────┬─────┬─────┬─────┬─────┬─────┐
            //  │     │     │     │     │     │     │      │  7  │  8  │  9  │  (  │  )  │ BS  │
            //  │     │     │     │     │     │     │      │  4  │  5  │  6  │  .  │  /  │  *  │
            //  │     │     │     │     │     │     │      │  1  │  2  │  3  │  0  │  -  │  +  │
            //  └─────┴─────┴─────┤     │     │     │      │     │     │     ├─────┴─────┴─────┘
            //                    └─────┴─────┴─────┘      └─────┴─────┴─────┘

            label = "Num";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp DOT               &kp KP_SLASH           &kp KP_MULTIPLY
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_N0             &kp KP_SUBTRACT        &kp KP_PLUS
                        &trans  &trans  &trans    &trans     &trans     &trans
            >;
        };
    };
};
