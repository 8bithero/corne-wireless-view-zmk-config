/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        vol_up {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <10 11>;
        };

        vol_down {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <22 23>;
        };

        vol_mute {
            bindings = <&kp K_MUTE>;
            key-positions = <34 35>;
        };

        media_next {
            bindings = <&kp C_NEXT>;
            key-positions = <8 9>;
        };

        media_prev {
            bindings = <&kp C_PREV>;
            key-positions = <6 7>;
        };

        media_play_pause {
            bindings = <&kp C_PLAY_PAUSE>;
            key-positions = <7 8>;
        };

        brightness_up {
            bindings = <&kp C_BRIGHTNESS_INC>;
            key-positions = <3 2>;
        };

        brightness_down {
            bindings = <&kp C_BRIGHTNESS_DEC>;
            key-positions = <1 2>;
        };

        window_right_half {
            bindings = <&kp LC(LA(RIGHT))>;
            key-positions = <17 16>;
            layers = <1>;
        };

        window_left_half {
            bindings = <&kp LC(LA(LEFT))>;
            key-positions = <16 15>;
            layers = <1>;
        };

        window_center {
            bindings = <&kp LC(LA(LS(E)))>;
            key-positions = <16 15 17>;
            layers = <1>;
        };

        first_two_thirds {
            bindings = <&kp LC(LA(LS(N)))>;
            key-positions = <27 28>;
        };

        last_two_thirds {
            bindings = <&kp LC(LA(LS(O)))>;
            key-positions = <28 29>;
        };

        first_three_fourths {
            bindings = <&kp LC(LA(LS(L)))>;
            key-positions = <12 13>;
        };

        last_three_fourths {
            bindings = <&kp LC(LA(LS(SLASH)))>;
            key-positions = <13 14>;
        };
    };

    behaviors {
        as_ht: autoshift_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTOSHIFT_HOLD_TAP";
            bindings = <&shift>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <190>;
        };

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };

        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            bindings = <&kp BACKSPACE>, <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        pscrn_drag: pscrn_drag {
            compatible = "zmk,behavior-macro";
            label = "PSCRN_DRAG";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(N4))>;
        };

        pscrn_window: pscrn_window {
            compatible = "zmk,behavior-macro";
            label = "PSCRN_WINDOW";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(N4)) &kp SPACE>;
        };

        pscrn_full: pscrn_full {
            compatible = "zmk,behavior-macro";
            label = "PSCRN_FULL";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(N3))>;
        };

        pscrn_crop: pscrn_crop {
            compatible = "zmk,behavior-macro";
            label = "PSCRN_CROP";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(N5))>;
        };

        shift: with_lshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "KEY_PRESS_WITH_LEFT_SHIFT_MODIFIER";
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AUTOSHIFT_KEYPRESS";
        };

        tile_half_t: bottom_half {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(UP_ARROW))>;
            label = "BOTTOM_HALF";
        };

        tile_half_b: top_half {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(DOWN_ARROW))>;
            label = "TOP_HALF";
        };

        tile_1_3: first_third {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(N))>;
            label = "FIRST_THIRD";
        };

        tile_3_3: last_third {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(O))>;
            label = "LAST_THIRD";
        };

        tile_1_4: first_fourth {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(L))>;
            label = "FIRST_FOURTH";
        };

        tile_4_4: last_fourth {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(SLASH))>;
            label = "LAST_FOURTH";
        };

        tile_max_h: max_height {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(GRAVE))>;
            label = "MAX_HEIGHT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            //  ┌─────┬─────┬─────┬─────┬─────┬─────┐      ┌─────┬─────┬─────┬─────┬─────┬─────┐
            //  │ TAB │  Q  │  D  │  R  │  W  │  B  │      │  J  │  F  │  U  │  P  │  ;  │ BS  │
            //  │ CTRL│  A  │  S  │  D  │  F  │  G  │      │  Y  │  N  │  E  │  O  │  I  │  '  │
            //  │ SHFT│  Z  │  X  │  C  │  V  │  B  │      │  K  │  L  │  ,  │  .  │  /  │ ESC │
            //  └─────┴─────┴─────┤ GUI │ LWR │ SPC │      │ ENT │ RSE │ ALT ├─────┴─────┴─────┘
            //                    └─────┴─────┴─────┘      └─────┴─────┴─────┘

            display-name = "Base";
            bindings = <
&kp TAB              &kp Q  &kp D  &kp R     &kp W  &kp B        &kp J    &kp F  &kp U      &kp P    &mt LC(LG(SPACE)) SEMICOLON  &bspc_del
&kp LCTRL            &kp A  &kp S  &kp H     &kp T  &kp G        &kp Y    &kp N  &kp E      &kp O    &kp I                        &kp APOSTROPHE
&mt LSHIFT CAPSLOCK  &kp Z  &kp X  &kp M     &kp C  &kp V        &kp K    &kp L  &kp COMMA  &kp DOT  &kp FSLH                     &gresc
                                   &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            //  ┌─────┬─────┬─────┬─────┬─────┬─────┐      ┌─────┬─────┬─────┬─────┬─────┬─────┐
            //  │     │  !  │  @  │  £  │  $  │  %  │      │  ^  │  &  │  *  │  (  │  )  │ DEL │
            //  │     │     │     │     │     │     │      │  -  │  =  │  [  │  ]  │  \  │  `  │
            //  │     │     │     │     │     │     │      │  _  │  +  │  {  │  }  │  |  │  ~  │
            //  └─────┴─────┴─────┤     │     │     │      │     │ mo3 │     ├─────┴─────┴─────┘
            //                    └─────┴─────┴─────┘      └─────┴─────┴─────┘

            display-name = "Sym";
            bindings = <
&tile_max_h  &kp EXCL      &kp AT     &kp HASH              &kp DLLR              &kp PRCNT               &kp CARET  &kp AMPS   &kp ASTRK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&tile_1_4    &tile_half_t  &tile_4_4  &kp LA(LC(NUMBER_1))  &kp LA(LC(NUMBER_2))  &kp LA(LC(NUMBER_3))    &kp MINUS  &kp PLUS   &kp BSLH   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp TILDE
&trans       &tile_half_b  &trans     &kp LA(LC(NUMBER_4))  &kp LA(LC(NUMBER_5))  &kp LA(LC(NUMBER_6))    &kp UNDER  &kp EQUAL  &kp PIPE   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
                                      &trans                &trans                &trans                  &trans     &mo 3      &trans
            >;
        };

        raise_layer {
            //  ┌─────┬─────┬─────┬─────┬─────┬─────┐      ┌─────┬─────┬─────┬─────┬─────┬─────┐
            //  │     │  1  │  2  │  3  │  4  │  5  │      │  6  │  7  │  8  │  9  │  0  │ DEL │
            //  │     │     │     │     │     │     │      │ LFT │ DWN │  UP │ RGT │     │     │
            //  │     │     │     │     │     │     │      │ HOME│PG_DN│PG_UP│ END │     │     │
            //  └─────┴─────┴─────┤ mo4 │ mo3 │     │      │     │     │     ├─────┴─────┴─────┘
            //                    └─────┴─────┴─────┘      └─────┴─────┴─────┘

            display-name = "Nav";
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7                   &kp N8          &kp N9        &kp N0               &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &mt RA(LEFT_ARROW) LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &mt RA(RIGHT) RIGHT  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp HOME                 &kp PAGE_DOWN   &kp PAGE_UP   &kp END              &trans
                        &mo 5   &mo 3   &trans    &trans  &trans                   &trans
            >;
        };

        utility_layer {
            //  ┌─────┬─────┬─────┬─────┬─────┬─────┐      ┌─────┬─────┬─────┬─────┬─────┬─────┐
            //  │     │     │     │     │     │     │      │     │     │     │     │     │     │
            //  │BTCLR│ BT0 │ BT1 │ BT2 │ BT3 │ BT4 │      │     │     │     │     │     │     │
            //  │EGTOG│     │     │     │     │     │      │     │     │     │     │     │     │
            //  └─────┴─────┴─────┤     │     │     │      │     │     │     ├─────┴─────┴─────┘
            //                    └─────┴─────┴─────┘      └─────┴─────┴─────┘
            // -----------------------------------------------------------------------------------------
            // |       |     |     |     |     |     |   |     |     |     |     |     |      |
            // | BTCLR | BT0 | BT1 | BT2 | BT3 | BT4 |   |     |     |     |     |     |      |
            // |       |     |     |     |     |     |   |     |     |     |     |     |      |
            //                     |     |     |     |   |     |     |     |

            display-name = "Util";
            bindings = <
&trans             &pscrn_full   &pscrn_crop   &pscrn_window  &pscrn_drag   &trans          &trans       &trans  &trans  &trans  &trans  &trans
&bt BT_CLR         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4    &trans       &trans  &trans  &trans  &trans  &trans
&ext_power EP_TOG  &trans        &trans        &trans         &trans        &bootloader     &bootloader  &trans  &trans  &trans  &trans  &kp K_POWER
                                               &trans         &trans        &trans          &trans       &trans  &trans
            >;
        };

        autoshift {
            bindings = <
&trans  &as Q  &as D  &as R   &as W   &as B     &as J   &as F   &as U   &as P   &trans  &trans
&trans  &as A  &as S  &as H   &as T   &as G     &as Y   &as N   &as E   &as O   &as I   &trans
&trans  &as Z  &as X  &as M   &as C   &as V     &as K   &as L   &trans  &trans  &trans  &trans
                      &trans  &trans  &trans    &trans  &trans  &trans
            >;

            display-name = "Autoshift";
        };

        numpad_layer {
            //  ┌─────┬─────┬─────┬─────┬─────┬─────┐      ┌─────┬─────┬─────┬─────┬─────┬─────┐
            //  │     │     │     │     │     │     │      │  7  │  8  │  9  │  (  │  )  │ BS  │
            //  │     │     │     │     │     │     │      │  4  │  5  │  6  │  .  │  /  │  *  │
            //  │     │     │     │     │     │     │      │  1  │  2  │  3  │  0  │  -  │  +  │
            //  └─────┴─────┴─────┤     │     │     │      │     │     │     ├─────┴─────┴─────┘
            //                    └─────┴─────┴─────┘      └─────┴─────┴─────┘

            display-name = "Num";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp DOT               &kp KP_SLASH           &kp KP_MULTIPLY
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_N0             &kp KP_SUBTRACT        &kp KP_PLUS
                        &trans  &trans  &trans    &trans     &trans     &trans
            >;
        };
    };
};
