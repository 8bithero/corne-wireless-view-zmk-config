/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        vol_up {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <10 11>;
        };

        vol_down {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <22 23>;
        };

        vol_mute {
            bindings = <&kp K_MUTE>;
            key-positions = <34 35>;
        };

        media_next {
            bindings = <&kp C_NEXT>;
            key-positions = <8 9>;
        };

        media_prev {
            bindings = <&kp C_PREV>;
            key-positions = <6 7>;
        };

        media_play_pause {
            bindings = <&kp C_PLAY_PAUSE>;
            key-positions = <7 8>;
        };

        brightness_up {
            bindings = <&kp C_BRIGHTNESS_INC>;
            key-positions = <3 2>;
        };

        brightness_down {
            bindings = <&kp C_BRIGHTNESS_DEC>;
            key-positions = <1 2>;
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp TAB  &kp Q  &kp W     &kp E  &kp R      &kp T      &kp Y  &kp U      &kp I    &kp O     &kp P  &kp BSPC
&kp LCTRL  &kp A  &kp S     &kp D  &kp F      &kp G      &kp H  &kp J      &kp K    &kp L  &kp SEMI   &kp SQT
&kp LSHFT  &kp Z  &kp X     &kp C  &kp V      &kp B      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH   &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2   &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | DEL |
            // |     |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `  |
            // |     |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~  |
            //                   |     |     |     |   |     |     |     |

            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET   &kp AMPS  &kp KP_MULTIPLY  &kp LPAR  &kp RPAR    &kp DEL
&trans    &trans  &trans    &trans    &trans     &trans    &kp MINUS  &kp EQUAL         &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
&trans    &trans  &trans    &trans    &trans     &trans    &kp UNDER   &kp PLUS         &kp LBRC  &kp RBRC  &kp PIPE  &kp TILDE
                             &mo 4    &trans     &trans       &trans      &mo 3           &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | DEL |
            // |     |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |     |
            // |     |     |     |     |     |     |   |     |     |     |     |     |     |
            //                   |     |     |     |   |     |     |     |

            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5               &kp N6    &kp N7  &kp N8               &kp N9  &kp N0  &kp DEL
&trans  &trans  &trans  &trans  &trans  &trans    &mt RA(LEFT) LEFT  &kp DOWN  &kp UP  &mt RA(RIGHT) RIGHT  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans               &trans    &trans  &trans               &trans  &trans   &trans
                        &trans   &mo 3  &trans               &trans    &trans  &trans
            >;
        };

        bluetooth_layer {
            // -----------------------------------------------------------------------------------------
            // |       |     |     |     |     |     |   |     |     |     |     |     |      |
            // | BTCLR | BT0 | BT1 | BT2 | BT3 | BT4 |   |     |     |     |     |     |      |
            // |       |     |     |     |     |     |   |     |     |     |     |     |      |
            //                     |     |     |     |   |     |     |     |

            bindings = <
    &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
    &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                              &trans        &trans        &trans    &trans  &trans  &trans
            >;

            label = "Bluetooth";
        };

        numpad_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp BACKSPACE
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_N4  &kp KP_N5  &kp KP_N6               &kp DOT           &kp KP_SLASH  &kp KP_MULTIPLY
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_N1  &kp KP_N2  &kp KP_N3             &kp KP_N0        &kp KP_SUBTRACT      &kp KP_PLUS
                        &trans  &trans  &trans       &trans     &trans     &trans
            >;
        };
    };
};
